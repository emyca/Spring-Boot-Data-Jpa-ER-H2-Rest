
REST API Article-Remark
-------------------------

В Web-браузері запускаємо H2 Database Engine
http://localhost:8080/h2-console
Конектимося до БД.

Postman для тесту REST API
https://www.postman.com/

Для передачі тіла запиту,
налаштування в Postman: Body > raw > JSON.


(1) Отримання всіх Article даних.
Дані не існують взагалі.

GET
http://localhost:8080/api/v1/articles


(2) Отримання всіх Remark даних за
неіснуючим Article id, оскільки Article
дані не існують взагалі.

GET
http://localhost:8080/api/v1/articles/1/remarks


(3) Отримання даних за id.
Дані не існують взагалі.

GET
http://localhost:8080/api/v1/articles/1

GET
http://localhost:8080/api/v1/remarks/1


(4) Оновлення даних за id.
Дані не існують взагалі.

PUT
http://localhost:8080/api/v1/articles/1

{
	"title": "Fruits",
	"content": "Fruits are very tasty and useful."
}

PUT
http://localhost:8080/api/v1/remarks/1

{
	"consideration": "It can be discussed."
}


(5) Видалення даних за id
Дані не існують взагалі.

DELETE
http://localhost:8080/api/v1/articles/1

DELETE
http://localhost:8080/api/v1/remarks/1


(6) Створення Article даних

POST
http://localhost:8080/api/v1/articles

Прописуємо при кожному запиті окремо:


{
	"title": "Fruits",
	"content": "Fruits are very useful for eating."
}


{
	"title": "About animals",
	"content": "Animals are very funny creatures."
}


{
	"title": "Football game",
	"content": "Football as a game is very common in many countries."
}


(7) Створення Remark даних за Article id.

POST
http://localhost:8080/api/v1/articles/1/remarks

{
	"consideration": "Good thinking."
}

Перевіремо через отримання всіх Article даних
GET
http://localhost:8080/api/v1/articles


POST
http://localhost:8080/api/v1/articles/1/remarks

{
	"consideration": "Interesting thoughts."
}

Перевіремо через отримання всіх Article даних
GET
http://localhost:8080/api/v1/articles

POST
http://localhost:8080/api/v1/articles/3/remarks

{
	"consideration": "Interesting thoughts."
}

Перевіремо через отримання всіх Article даних
GET
http://localhost:8080/api/v1/articles

Спробуємо створити Remark даних за неіснуючим Article id.


(8) Отримання всіх Article даних.
Дані існують.

GET
http://localhost:8080/api/v1/articles


(9) Отримання всіх Remark даних за існуючим Article id.

Article дані існують, Remark дані існують
GET
http://localhost:8080/api/v1/articles/1/remarks

Article дані існують, Remark дані не існують
GET
http://localhost:8080/api/v1/articles/2/remarks

Спробуємо за неіснуючим Article id.


(10) Отримання даних за id
Дані існують

GET
http://localhost:8080/api/v1/articles/1

GET
http://localhost:8080/api/v1/remarks/1

Також спробуємо за неіснуючим id.


(11) Оновлення Article даних за id
Дані існують

PUT
http://localhost:8080/api/v1/articles/2

{
	"title": "About animals",
	"content": "Animals are very funny and clever creatures."
}

Перевіремо через отримання всіх Article даних
GET
http://localhost:8080/api/v1/articles

PUT
http://localhost:8080/api/v1/articles/1

{
	"title": "Fruits",
	"content": "Fruits are very tasty and useful."
}

Перевіремо через отримання всіх Article даних
GET
http://localhost:8080/api/v1/articles

Також спробуємо оновлення Article даних за неіснуючим
Article id.


(12) Оновлення Remark даних за id

PUT
http://localhost:8080/api/v1/remarks/3

{
	"consideration": "It can be discussed."
}

Також спробуємо за неіснуючим id.


(13) Створення Article даних

POST
http://localhost:8080/api/v1/articles

{
	"title": "Books",
	"content": "Books are a source of knowledge."
}

Перевіремо через отримання всіх Article даних
GET
http://localhost:8080/api/v1/articles


(14) Створення Remark даних за Article id

POST
http://localhost:8080/api/v1/articles/4/remarks

{
	"consideration": "Amazing and unbelievable!"
}

{
	"consideration": "Good thinking."
}

Перевіремо через отримання всіх Article даних
GET
http://localhost:8080/api/v1/articles


(15) Видалення Article даних за id.
Дані існують.

DELETE
http://localhost:8080/api/v1/articles/3

Спробуємо видалити повторно.

Перевіремо через отримання всіх Article даних
GET
http://localhost:8080/api/v1/articles


(16) Видалення Remark даних за id

DELETE
http://localhost:8080/api/v1/remarks/2

Спробуємо видалити повторно.

Перевіремо через отримання всіх Article даних
GET
http://localhost:8080/api/v1/articles

